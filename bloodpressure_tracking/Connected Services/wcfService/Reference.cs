//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bloodpressure_tracking.wcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BloodPressureReading", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class BloodPressureReading : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiastolicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReadingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystolicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Diastolic {
            get {
                return this.DiastolicField;
            }
            set {
                if ((this.DiastolicField.Equals(value) != true)) {
                    this.DiastolicField = value;
                    this.RaisePropertyChanged("Diastolic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReadingDate {
            get {
                return this.ReadingDateField;
            }
            set {
                if ((this.ReadingDateField.Equals(value) != true)) {
                    this.ReadingDateField = value;
                    this.RaisePropertyChanged("ReadingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Systolic {
            get {
                return this.SystolicField;
            }
            set {
                if ((this.SystolicField.Equals(value) != true)) {
                    this.SystolicField = value;
                    this.RaisePropertyChanged("Systolic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wcfService.IBloodPressureWCF")]
    public interface IBloodPressureWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/GetDietRecommendation", ReplyAction="http://tempuri.org/IBloodPressureWCF/GetDietRecommendationResponse")]
        string GetDietRecommendation(string email, double systolicBP, double diastolicBP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/GetDietRecommendation", ReplyAction="http://tempuri.org/IBloodPressureWCF/GetDietRecommendationResponse")]
        System.Threading.Tasks.Task<string> GetDietRecommendationAsync(string email, double systolicBP, double diastolicBP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/GetBloodPressureRange", ReplyAction="http://tempuri.org/IBloodPressureWCF/GetBloodPressureRangeResponse")]
        string GetBloodPressureRange(double systolicBP, double diastolicBP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/GetBloodPressureRange", ReplyAction="http://tempuri.org/IBloodPressureWCF/GetBloodPressureRangeResponse")]
        System.Threading.Tasks.Task<string> GetBloodPressureRangeAsync(double systolicBP, double diastolicBP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/GetBloodPressureReadings", ReplyAction="http://tempuri.org/IBloodPressureWCF/GetBloodPressureReadingsResponse")]
        bloodpressure_tracking.wcfService.BloodPressureReading[] GetBloodPressureReadings(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/GetBloodPressureReadings", ReplyAction="http://tempuri.org/IBloodPressureWCF/GetBloodPressureReadingsResponse")]
        System.Threading.Tasks.Task<bloodpressure_tracking.wcfService.BloodPressureReading[]> GetBloodPressureReadingsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/getReminder", ReplyAction="http://tempuri.org/IBloodPressureWCF/getReminderResponse")]
        string getReminder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloodPressureWCF/getReminder", ReplyAction="http://tempuri.org/IBloodPressureWCF/getReminderResponse")]
        System.Threading.Tasks.Task<string> getReminderAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBloodPressureWCFChannel : bloodpressure_tracking.wcfService.IBloodPressureWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BloodPressureWCFClient : System.ServiceModel.ClientBase<bloodpressure_tracking.wcfService.IBloodPressureWCF>, bloodpressure_tracking.wcfService.IBloodPressureWCF {
        
        public BloodPressureWCFClient() {
        }
        
        public BloodPressureWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BloodPressureWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BloodPressureWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BloodPressureWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDietRecommendation(string email, double systolicBP, double diastolicBP) {
            return base.Channel.GetDietRecommendation(email, systolicBP, diastolicBP);
        }
        
        public System.Threading.Tasks.Task<string> GetDietRecommendationAsync(string email, double systolicBP, double diastolicBP) {
            return base.Channel.GetDietRecommendationAsync(email, systolicBP, diastolicBP);
        }
        
        public string GetBloodPressureRange(double systolicBP, double diastolicBP) {
            return base.Channel.GetBloodPressureRange(systolicBP, diastolicBP);
        }
        
        public System.Threading.Tasks.Task<string> GetBloodPressureRangeAsync(double systolicBP, double diastolicBP) {
            return base.Channel.GetBloodPressureRangeAsync(systolicBP, diastolicBP);
        }
        
        public bloodpressure_tracking.wcfService.BloodPressureReading[] GetBloodPressureReadings(int id) {
            return base.Channel.GetBloodPressureReadings(id);
        }
        
        public System.Threading.Tasks.Task<bloodpressure_tracking.wcfService.BloodPressureReading[]> GetBloodPressureReadingsAsync(int id) {
            return base.Channel.GetBloodPressureReadingsAsync(id);
        }
        
        public string getReminder(int id) {
            return base.Channel.getReminder(id);
        }
        
        public System.Threading.Tasks.Task<string> getReminderAsync(int id) {
            return base.Channel.getReminderAsync(id);
        }
    }
}
